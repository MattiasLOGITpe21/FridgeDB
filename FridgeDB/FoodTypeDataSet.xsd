<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FoodTypeDataSet" targetNamespace="http://tempuri.org/FoodTypeDataSet.xsd" xmlns:mstns="http://tempuri.org/FoodTypeDataSet.xsd" xmlns="http://tempuri.org/FoodTypeDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FoodTypeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FoodTypeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FridgeDB.Properties.Settings.GlobalReference.Default.FoodTypeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FoodInTheFridgeTableAdapter" GeneratorDataComponentClassName="FoodInTheFridgeTableAdapter" Name="FoodInTheFridge" UserDataComponentName="FoodInTheFridgeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FoodTypeConnectionString (Settings)" DbObjectName="dbo.FoodInTheFridge" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FoodInTheFridge] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FoodInTheFridge] ([Name], [TypeId]) VALUES (@Name, @TypeId);
SELECT Id, Name, TypeId FROM FoodInTheFridge WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, TypeId FROM dbo.FoodInTheFridge</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FoodInTheFridge] SET [Name] = @Name, [TypeId] = @TypeId WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([TypeId] = @Original_TypeId));
SELECT Id, Name, TypeId FROM FoodInTheFridge WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\FRIDGEDB\FRIDGEDB\FOODTYPE.MDF].dbo.FoodInTheFridge" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="TypeId" DataSetColumn="TypeId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeNameTableAdapter" GeneratorDataComponentClassName="TypeNameTableAdapter" Name="TypeName" UserDataComponentName="TypeNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FoodTypeConnectionString (Settings)" DbObjectName="dbo.TypeName" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeName] WHERE (([Id] = @Original_Id) AND ([FoodTypeName] = @Original_FoodTypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FoodTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FoodTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeName] ([FoodTypeName]) VALUES (@FoodTypeName);
SELECT Id, FoodTypeName FROM TypeName WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FoodTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FoodTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, FoodTypeName FROM dbo.TypeName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeName] SET [FoodTypeName] = @FoodTypeName WHERE (([Id] = @Original_Id) AND ([FoodTypeName] = @Original_FoodTypeName));
SELECT Id, FoodTypeName FROM TypeName WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FoodTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FoodTypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FoodTypeName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FoodTypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\USERS\OPILANE\SOURCE\REPOS\FRIDGEDB\FRIDGEDB\FOODTYPE.MDF].dbo.TypeName" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="FoodTypeName" DataSetColumn="FoodTypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FoodTypeDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FoodTypeDataSet" msprop:Generator_UserDSName="FoodTypeDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="FoodInTheFridge" msprop:Generator_TableClassName="FoodInTheFridgeDataTable" msprop:Generator_TableVarName="tableFoodInTheFridge" msprop:Generator_TablePropName="FoodInTheFridge" msprop:Generator_RowDeletingName="FoodInTheFridgeRowDeleting" msprop:Generator_RowChangingName="FoodInTheFridgeRowChanging" msprop:Generator_RowEvHandlerName="FoodInTheFridgeRowChangeEventHandler" msprop:Generator_RowDeletedName="FoodInTheFridgeRowDeleted" msprop:Generator_UserTableName="FoodInTheFridge" msprop:Generator_RowChangedName="FoodInTheFridgeRowChanged" msprop:Generator_RowEvArgName="FoodInTheFridgeRowChangeEvent" msprop:Generator_RowClassName="FoodInTheFridgeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypeId" msprop:Generator_ColumnVarNameInTable="columnTypeId" msprop:Generator_ColumnPropNameInRow="TypeId" msprop:Generator_ColumnPropNameInTable="TypeIdColumn" msprop:Generator_UserColumnName="TypeId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeName" msprop:Generator_TableClassName="TypeNameDataTable" msprop:Generator_TableVarName="tableTypeName" msprop:Generator_TablePropName="TypeName" msprop:Generator_RowDeletingName="TypeNameRowDeleting" msprop:Generator_RowChangingName="TypeNameRowChanging" msprop:Generator_RowEvHandlerName="TypeNameRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeNameRowDeleted" msprop:Generator_UserTableName="TypeName" msprop:Generator_RowChangedName="TypeNameRowChanged" msprop:Generator_RowEvArgName="TypeNameRowChangeEvent" msprop:Generator_RowClassName="TypeNameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="FoodTypeName" msprop:Generator_ColumnVarNameInTable="columnFoodTypeName" msprop:Generator_ColumnPropNameInRow="FoodTypeName" msprop:Generator_ColumnPropNameInTable="FoodTypeNameColumn" msprop:Generator_UserColumnName="FoodTypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FoodInTheFridge" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="TypeName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeName" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="TypeIdFK" msdata:parent="TypeName" msdata:child="FoodInTheFridge" msdata:parentkey="Id" msdata:childkey="TypeId" msprop:Generator_UserChildTable="FoodInTheFridge" msprop:Generator_ChildPropName="GetFoodInTheFridgeRows" msprop:Generator_UserRelationName="TypeIdFK" msprop:Generator_RelationVarName="relationTypeIdFK" msprop:Generator_UserParentTable="TypeName" msprop:Generator_ParentPropName="TypeNameRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>